2023-07-01 11:33:17.623467: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
60000
X_train shape: (60000, 1, 28, 28)
60000 train samples
10000 test samples
Traceback (most recent call last):
  File "C:\Users\XYZ\Downloads\Bug Reproducibility\Bugs\020\main.py", line 47, in <module>
    model.add(Convolution2D(nb_filters, nb_conv, nb_conv,
  File "C:\Users\XYZ\Downloads\Bug Reproducibility\venv\lib\site-packages\tensorflow\python\trackable\base.py", line 205, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\Users\XYZ\Downloads\Bug Reproducibility\venv\lib\site-packages\keras\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Users\XYZ\Downloads\Bug Reproducibility\venv\lib\site-packages\tensorflow\python\framework\ops.py", line 1967, in _create_c_op
    raise ValueError(e.message)
ValueError: Exception encountered when calling layer "conv2d" (type Conv2D).

Negative dimension size caused by subtracting 3 from 1 for '{{node conv2d/Conv2D}} = Conv2D[T=DT_FLOAT, data_format="NHWC", dilations=[1, 1, 1, 1], explicit_paddings=[], padding="VALID", strides=[1, 3, 3, 1], use_cudnn_on_gpu=true](Placeholder, conv2d/Conv2D/ReadVariableOp)' with input shapes: [?,1,28,28], [3,3,28,32].

Call arguments received by layer "conv2d" (type Conv2D):
  ï¿½ inputs=tf.Tensor(shape=(None, 1, 28, 28), dtype=float32)
